View(blank_theme)
View(blank_theme)
View(blank_theme)
library(maps)
world_map <- ggplot() +
geom_map (data = world, map = world, aes(long, lat, map_id = region))
world <- map_data("world")
world_map <- ggplot() +
geom_map (data = world, map = world, aes(long, lat, map_id = region))
world <- map_data("world")
world_map <- ggplot() +
geom_map (data = world, map = world, aes(x = long, y = lat, map_id = region))
View(world_map)
plot(world_map)
world_map <- ggplot() +
geom_map (data = world, map = world, aes(x = long, y = lat, map_id = region),
color = "black", fill = "lightgray", size = 0.1)
plot(world_map)
world_map <- ggplot() +
geom_map (data = covid_summary_data, map = world, aes(x = long, y = lat, map_id = region),
color = "black", fill = "lightgray", size = 0.1)
plot(world_map)
world_map <- ggplot() +
geom_map (data = covid_summary_data, map = world, aes(long, lat, map_id = region),
color = "black", fill = "lightgray", size = 0.1)
plot(world_map)
View(covid_summary_data)
world_map <- ggplot(data = covid_summary_data) +
geom_map (data = world, map = world, aes(long, lat, map_id = region),
color = "black", fill = "lightgray", size = 0.1)
plot(world_map)
world_map <- ggplot(data = covid_summary_data) +
geom_map (data = world, map = world, mapping = aes(long, lat, map_id = region),
color = "black", fill = "lightgray", size = 0.1)
plot(world_map)
world_map <- ggplot(data = covid_summary_data) +
geom_map (data = world, map = world, mapping = aes(long, lat, group = group,
fill = covid_summary_dat$total_confirmed, map_id = region),
color = "black", fill = "lightgray", size = 0.1)
plot(world_map)
blank_theme <- theme_bw() +
theme(
axis.line = element_blank(), # remove axis lines
axis.text = element_blank(), # remove axis labels
axis.ticks = element_blank(), # remove axis ticks
axis.title = element_blank(), # remove axis titles
plot.background = element_blank(), # remove gray background
panel.grid.major = element_blank(), # remove major grid lines
panel.grid.minor = element_blank(), # remove minor grid lines
panel.border = element_blank() # remove border around plot
)
world <- map_data("world")
world_map <- ggplot(data = covid_summary_data) +
geom_map (data = world, map = world, mapping = aes(long, lat, group = group,
fill = covid_summary_dat$total_confirmed, map_id = region),
color = "black", fill = "lightgray", size = 0.1) +
coord_map() +
scale_fill_continuous(limits = c(0, max(covid_summary_dat$total_confirmed)), na.value = "white", low = "yellow", high = "red") +
blank_theme
plot(world_map)
covid_summary_dat$total_confirmed
world <- map_data("world")
world_map <- ggplot(data = covid_summary_data) +
geom_map (data = world, map = world, mapping = aes(long, lat, group = group,
fill = covid_summary_data$total_confirmed, map_id = region),
color = "black", fill = "lightgray", size = 0.1) +
coord_map() +
scale_fill_continuous(limits = c(0, max(covid_summary_data$total_confirmed)), na.value = "white", low = "yellow", high = "red") +
blank_theme
plot(world_map)
world_map <- ggplot(data = covid_summary_data) +
geom_map (data = world, map = world, mapping = aes(long, lat, group = group),
fill = covid_summary_data$total_confirmed, map_id = region,
color = "black", fill = "lightgray", size = 0.1) +
coord_map() +
scale_fill_continuous(limits = c(0, max(covid_summary_data$total_confirmed)), na.value = "white", low = "yellow", high = "red") +
blank_theme
plot(world_map)
covid_summary_data$total_confirmed
world_map <- ggplot(data = covid_summary_data) +
geom_polygon (data = world, map = world, mapping = aes(long, lat, group = group),
fill = covid_summary_data$total_confirmed,,
color = "black", fill = "lightgray", size = 0.1) +
coord_map() +
scale_fill_continuous(limits = c(0, max(covid_summary_data$total_confirmed)), na.value = "white", low = "yellow", high = "red") +
blank_theme
plot(world_map)
world_map <- ggplot(data = covid_summary_data) +
geom_polygon ( mapping = aes(x = long, y = lat, group = group,
fill = covid_summary_data$total_confirmed),
color = "black", fill = "lightgray", size = 0.1 ) +
coord_map() +
scale_fill_continuous(limits = c(0, max(covid_summary_data$total_confirmed)), na.value = "white", low = "yellow", high = "red") +
blank_theme
plot(world_map)
# IMPORT RAW DATA: Johns Hopkins Github data
confirmedraw <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_câ€¦")
str(confirmedraw) # Check latest date at the end of data
# IMPORT RAW DATA: Johns Hopkins Github data
confirmedraw <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
str(confirmedraw) # Check latest date at the end of data
deathsraw <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
recoveredraw <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv")
# DATA CLEANING: To create country level and global combined data
# Convert each data set from wide to long AND aggregate at country level
library(tidyr)
library(dplyr)
confirmed <- confirmedraw %>% gather(key="date", value="confirmed", -c(Country.Region, Province.State, Lat, Long)) %>% group_by(Country.Region, date) %>% summarize(confirmed=sum(confirmed))
deaths <- deathsraw %>% gather(key="date", value="deaths", -c(Country.Region, Province.State, Lat, Long)) %>% group_by(Country.Region, date) %>% summarize(deaths=sum(deaths))
recovered <- recoveredraw %>% gather(key="date", value="recovered", -c(Country.Region, Province.State, Lat, Long)) %>% group_by(Country.Region, date) %>% summarize(recovered=sum(recovered))
summary(confirmed)
# Final data: combine all three
country <- full_join(confirmed, deaths) %>% full_join(recovered)
# Date variable
# Fix date variable and convert from character to date
str(country) # check date character
country$date <- country$date %>% sub("X", "", .) %>% as.Date("%m.%d.%y")
str(country) # check date Date
# Create new variable: number of days
country <- country %>% group_by(Country.Region) %>% mutate(cumconfirmed=cumsum(confirmed), days = date - first(date) + 1)
# Create new variable: number of days
country <- country %>% group_by(Country.Region) %>% mutate(cumconfirmed=cumsum(confirmed), days = date - first(date) + 1)
View(country)
# Create new variable: number of days
country <- country %>% group_by(Country.Region) %>% mutate(cumconfirmed=cumsum(confirmed), days = date - first(date) + 1)
country %>% group_by(Country.Region)
# DATA CLEANING: To create country level and global combined data
# Convert each data set from wide to long AND aggregate at country level
library(tidyr)
library(dplyr)
# Create new variable: number of days
country <- country %>% group_by(Country.Region) %>% mutate(cumconfirmed = cumsum(confirmed), days = date - first(date) + 1)
tokyo_medals_covid_data <- full_join(tokyo_medals_data, aggregate_summary_data)
View(tokyo_medals_covid_data)
View(tokyo_medals_covid_data)
View(tokyo_olymic_medal)
View(brazil_olympic_selected_country_medal)
brazil2016_total_medal <- brazil_olympic_selected_country_medal %>%
mutate(total = Gold + Silver + Bronze)
View(brazil2016_total_medal)
View(tokyo_olymic_medal)
View(tokyo_olymic_medal)
View(tokyo_medals_data)
View(tokyo_medals_data)
View(tokyo_medals_data)
View(tokyo_medals_data)
tokyo_medals_data <- tokyo_medals_data %>%
filter(Country %in% c("United States of America", "China", "India", "Japan", "Great Britain", "Germany"))
tokyo_medals_data <- tokyo_medals_data %>%
select(Country, Total) %>%
filter(Country %in% c("United States of America", "China", "India", "Japan", "Great Britain", "Germany"))
brazil2016_total_medal <- brazil2016_total_medal %>%
select(Country_Name, total)
tokyo_medals_data <- tokyo_medals_data %>%
select(Country, Total) %>%
filter(Country %in% c("United States of America", "China", "India", "Japan", "Great Britain", "Germany"))
tokyo_medals_data <- tokyo_medals_data %>%
select(Country, Total) %>%
filter(Country %in% c("United States of America", "China", "India", "Japan", "Great Britain", "Germany"))
rename("United States of America" = "United States")
rownames(tokyo_medals_data)[rownames(tokyo_medals_data) == "United States of America"] <- "United States"
tokyo_medals_data <- tokyo_medals_data %>%
select(Country, Total) %>%
filter(Country %in% c("United States of America", "China", "India", "Japan", "Great Britain", "Germany"))  %>%
rownames(tokyo_medals_data)[rownames(tokyo_medals_data) == "United States of America"] <- "United States"
tokyo_medals_data <- tokyo_medals_data %>%
select(Country, Total) %>%
filter(Country %in% c("United States of America", "China", "India", "Japan", "Great Britain", "Germany"))  %>%
rownames(tokyo_medals_data)[rownames(tokyo_medals_data) == "United States of America"] = "United States"
Medals <- c(113,58,65,37,7)
Country_Name <- c("United States", "Japan" , "China","Great Britain", "Germany", "India")))
Country_Name <- c("United States", "Japan" , "China","Great Britain", "Germany", "India")
tokyo_medals_data <- data.frame(Medals, Country_Name)
tokyo_medals_data <- tokyo_medals_data %>%
select(Country, Total) %>%
filter(Country %in% c("United States of America", "China", "India", "Japan", "Great Britain", "Germany"))
View(tokyo_olymic_medal)
View(tokyo_olymic_medal)
tokyo_medals_data <- tokyo_medals_data %>%
select(Country, Total) %>%
filter(Country %in% c("United States of America", "People's Republic of China", "India", "Japan", "Great Britain", "Germany"))
Medals <- c(113,58,88,65,37,7)
Country_Name <- c("United States", "Japan" , "China","Great Britain", "Germany", "India")
tokyo_medals_data_new <- data.frame(Medals, Country_Name)
View(tokyo_olymic_medal)
View(tokyo_olymic_medal)
View(tokyo_medals_data_new)
tokyo_medals_data_new <- data.frame(Country_Name, Medals)
medals_data <- left.join(brazil2016_total_medal, tokyo_medals_data_new)
library(dplyr)
medals_data <- Left.join(brazil2016_total_medal, tokyo_medals_data_new)
medals_data <- brazil2016_total_medal %>%
left.join(tokyo_medals_data_new, by = "Country")
medals_data <- brazil2016_total_medal %>%
left_join(tokyo_medals_data_new, by = "Country")
medals_data <- brazil2016_total_medal %>%
left_join(tokyo_medals_data_new, by = "Country_Name")
View(medals_data)
View(medals_data)
Medals_2021 <- c(113,58,88,65,37,7)
Country_Name <- c("United States", "Japan" , "China","Great Britain", "Germany", "India")
tokyo_medals_data_new <- data.frame(Country_Name, Medals)
medals_data <- brazil2016_total_medal %>%
left_join(tokyo_medals_data_new, by = "Country_Name") %>%
rename ("total" = "Medals_2016")
medals_data <- brazil2016_total_medal %>%
left_join(tokyo_medals_data_new, by = "Country_Name") %>%
rename (total = "Medals_2016")
medals_data <- brazil2016_total_medal %>%
left_join(tokyo_medals_data_new, by = "Country_Name") %>%
rename ( "Medals_2016" = total)
View(medals_data)
Medals_2021 <- c(113,58,88,65,37,7)
Country_Name <- c("United States", "Japan" , "China","Great Britain", "Germany", "India")
tokyo_medals_data_new <- data.frame(Country_Name, Medals_2021)
medals_data <- brazil2016_total_medal %>%
left_join(tokyo_medals_data_new, by = "Country_Name") %>%
rename ( "Medals_2016" = total)
line_graph <- ggplot( aes ( x = (2016,2021)))
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(specie,condition,value)
View(data)
Year <- (c(2016, 2021),5)
Medals <- c(121, 113, 41, 58,70, 88, 67, 65, 42, 37, 2, 7)
Year <- (2016,2021,2016,2021,2016,2021,2016,2021,2016,2021,2016,2021)
Country_Name <- c("United States", "United States", "Japan" , "Japan" , "China", "China", "Great Britain", "Great Britain", "Germany", "Germany",  "India",  "India")
tokyo_medals_data_new <- data.frame(Country_Name, Medals, Year)
Year <- (2016,2021,2016,2021,2016,2021,2016,2021,2016,2021,2016,2021)
Medals <- c(121, 113, 41, 58,70, 88, 67, 65, 42, 37, 2, 7)
Year <- ("2016","2021","2016","2021","2016","2021","2016","2021","2016","2021","2016","2021")
Country_Name <- c("United States", "United States", "Japan" , "Japan" , "China", "China", "Great Britain", "Great Britain", "Germany", "Germany",  "India",  "India")
tokyo_medals_data_new <- data.frame(Country_Name, Medals, Year)
Year <- ("2016","2021","2016","2021","2016","2021","2016","2021","2016","2021","2016","2021")
Medals <- c(121, 113, 41, 58,70, 88, 67, 65, 42, 37, 2, 7)
Year <- c("2016","2021","2016","2021","2016","2021","2016","2021","2016","2021","2016","2021")
Country_Name <- c("United States", "United States", "Japan" , "Japan" , "China", "China", "Great Britain", "Great Britain", "Germany", "Germany",  "India",  "India")
tokyo_medals_data_new <- data.frame(Country_Name, Medals, Year)
View(tokyo_olymic_medal)
View(tokyo_olymic_medal)
View(tokyo_medals_data_new)
stacked_bar_graph <- ggplot(medals_data, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity")
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity")
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
coord_flip()
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Medal Count from 2016 to 2021")
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Medal Count from 2016 to 2021")
coord_flip()
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021")
coord_flip()
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021")
coord_flip()
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip()
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
theme_ipsum()
plot(stacked_bar_graph)
Medals <- c(113,121, 58,41, 88,70,  65,  67, 37,42,  7, 2)
Year <- c("2021","2016","2021","2016","2021","2016","2021","2016","2021","2016","2021","2016")
Country_Name <- c("United States", "United States", "Japan" , "Japan" , "China", "China", "Great Britain", "Great Britain", "Germany", "Germany",  "India",  "India")
tokyo_medals_data_new <- data.frame(Country_Name, Medals, Year)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip()
plot(stacked_bar_graph)
install.packages("hrbrthemes")
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
theme_ipsum()
plot(stacked_bar_graph)
library(hrbrthemes)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
theme_ipsum()
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
scale_fill_manual(values = c("Green", "Red"))
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
scale_fill_manual(values = c("Dark Green", "Red"))
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
scale_fill_manual(values = c("Dark Green", "Dark Red"))
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
scale_fill_manual(values = c("Dark Green", "red4"))
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
scale_fill_manual(values = c("Dark Green", "Red4"))
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
scale_fill_manual(values = c("Dark Green", "Orange Red"))
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
scale_fill_manual(values = c("Dark Green", "Light Red"))
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
scale_fill_manual(values = c("Blue", "Dark Red"))
plot(stacked_bar_graph)
stacked_bar_graph <- ggplot(tokyo_medals_data_new, aes(fill=Year, y=Medals, x=Country_Name)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Medal Count", y = "Country", title = "Change in Total Medal Count from 2016 to 2021") +
coord_flip() +
scale_fill_manual(values = c("Blue", " Red"))
plot(stacked_bar_graph)
library(hrbrthemes)
install.packages("hrbrthemes")
library(hrbrthemes)
source("second_chart.R")
source("Chart3.R")
install.packages("hablar")
install.packages("ggrepel")
source("Chart1.R")
source("second_chart.R")
source("summary_info.R")
#added total medal count in 2016 Brazil olympic medal count
brazil_total_medal <- brazil_olympic_selected_country_medal %>%
mutate(total = Gold + Silver + Bronze) %>%
rename("Country Name" = Country_Name)
#Joined 2016 total medal counts of 6 country and their GDP
brazil_oly_gdp_medal_count <- gdp_medals_data %>%
left_join(brazil_total_medal, by = "Country Name") %>%
select ("Country Name", "2016_GDP", "total")
View(gdp_medals_data)
View(gdp_medals_data)
brazil_oly_gdp_medal_count <- gdp_medals_data %>%
left_join(brazil_total_medal, by = "Country_Name") %>%
select ("Country_Name", "2016_GDP", "total")
View(gdp_medals_data)
View(gdp_medals_data)
brazil_total_medal <- brazil_olympic_selected_country_medal %>%
mutate(total = Gold + Silver + Bronze) %>%
rename("Country Name" = Country_Name)
source("summary_info.R")
source("aggtable.R")
#Joined 2016 total medal counts of 6 country and their GDP
brazil_oly_gdp_medal_count <- gdp_medals_data %>%
left_join(brazil_total_medal, by = "Country Name") %>%
select ("Country Name", "2016_GDP", "total")
View(brazil_total_medal)
View(brazil_total_medal)
View(gdp_medals_data)
brazil_oly_gdp_medal_count <- gdp_medals_data %>%
rename("Country Name" = Country_Name) %>%
left_join(brazil_total_medal, by = "Country Name") %>%
select ("Country Name", "2016_GDP", "total")
brazil_oly_gdp_medal_count <- gdp_medals_data %>%
rename("Country Name" = Country_Name) %>%
left_join(brazil_total_medal, by = "Country Name") %>%
select ("Country Name", "GDP2016", "total")
chart_gdp_medal_count <- ggplot(gdp_medals_data) +
geom_point(data = gdp_medals_data,
size = 3,
color = "#E35E9C",
mapping = aes(x =  Total_Medals, y = GDP2016)) +
geom_text(aes(label=Country_Name))+
ggtitle("2016 GDP & Olympic Medal Count") +
theme(plot.title = element_text(size = 13, family = "mono", color = "#E35E9C"),
axis.text = element_text(color = "#525252", size = 8),
text = element_text(size = 10, family = "mono"))+
labs(x = "Total Medal", y = "GDP")
chart_two <- ggplot(jeuv) +
geom_point(data = jeuv,
mapping = aes(x = female_juvenile_jail_pop, y = male_juvenile_jail_pop)) +
ggtitle("Comparison of Male and Female juvenile population") +
labs(x = "Female Juvenile Population", y = "Male Juvenile Population")
chart_gdp_medal_count <- ggplot(gdp_medals_data) +
geom_point(data = gdp_medals_data,
size = 3,
color = "#E35E9C",
mapping = aes(x =  Total_Medals, y = GDP2016)) +
geom_text(aes(label=Country_Name))+
ggtitle("2016 GDP & Olympic Medal Count") +
theme(plot.title = element_text(size = 13, family = "mono", color = "#E35E9C"),
axis.text = element_text(color = "#525252", size = 8),
text = element_text(size = 10, family = "mono"))+
labs(x = "Total Medal", y = "GDP")
plot(chart_gdp_medal_count)
chart_gdp_medal_count <- ggplot(gdp_medals_data) +
geom_point(data = gdp_medals_data,
size = 3,
color = "#E35E9C",
mapping = aes(x =  Total_Medals, y = GDP2016)) +
geom_text(aes(label=Country_Name))+
ggtitle("2016 GDP & Olympic Medal Count") +
theme(plot.title = element_text(size = 13, family = "mono", color = "#E35E9C"),
axis.text = element_text(color = "#525252", size = 8),
text = element_text(size = 10, family = "mono")) +
labs(x = "Total Medal", y = "GDP")
plot(chart_gdp_medal_count)
chart_gdp_medal_count <- ggplot(gdp_medals_data) +
geom_point(data = gdp_medals_data,
size = 3,
color = "#E35E9C",
mapping = aes(x =  Total_Medals, y = GDP2016)) +
ggtitle("2016 GDP & Olympic Medal Count") +
theme(plot.title = element_text(size = 13, family = "mono", color = "#E35E9C"),
axis.text = element_text(color = "#525252", size = 8),
text = element_text(size = 10, family = "mono")) +
labs(x = "Total Medal", y = "GDP")
plot(chart_gdp_medal_count)
source("second_chart.R")
source("second_chart.R")
source("Chart3.R")
source("Chart3.R")
US_2016_GDP <- GDP_data %>%
filter(`Country Name` == "United States") %>%
#filter(`2016` == max(`2016`)) %>%
pull(`2016`)
# What was India's GDP in 2016?
India_2016_GDP <- GDP_data %>%
filter(`Country Name` == "India") %>%
pull(`2016`)
# What was China's GDP in 2016?
China_2016_GDP <- GDP_data %>%
filter(`Country Name` == "China") %>%
pull(`2016`)
a_table <- kable(tokyo_medals_data_new,
caption = "Medal Count in 2016 vs 2020",
format.args = list(
big.mark = ",",
scientific = FALSE
)
kable(tokyo_medals_data_new,
caption = "Medal Count in 2016 vs 2020",
format.args = list(
big.mark = ",",
scientific = FALSE
)
library(knitr)
a_table <- kable(tokyo_medals_data_new,
caption = "Medal Count in 2016 vs 2020",
format.args = list(
big.mark = ",",
scientific = FALSE
)
)
library(knitr)
gdp_vs_medal_table <- kable(brazil_oly_gdp_medal_count,
caption = "GDP vs Medal Count for Olympics 2016",
format.args = list(
big.mark = ",",
scientific = FALSE
)
)
avg_height_chart_table <- kable(Avg_Height_Chart_Data,
caption = "Average Weight of Men and Women for Olympics 2016",
format.args = list(
big.mark = ",",
scientific = FALSE
)
)
library(knitr)
avg_weight_chart_table <- kable(Avg_Weight_Chart_Data,
caption = "Average Weight of Men and Women for Olympics 2016",
format.args = list(
big.mark = ",",
scientific = FALSE
)
)
